package com.home.listener;

import java.util.Set;

import org.testng.ITestContext;
import org.testng.ITestListener;
import org.testng.ITestNGMethod;
import org.testng.ITestResult;

import com.aventstack.extentreports.AnalysisStrategy;
import com.home.common.extent.ExtentService;
import com.home.common.extent.ExtentTestManager;


public class ExtentITestListenerAdapter implements ITestListener {

    public synchronized void onStart(ITestContext context) {
    	
        ExtentService.getInstance().setAnalysisStrategy(AnalysisStrategy.TEST);
    }

    public synchronized void onFinish(ITestContext context) {
    	
    	Set<ITestResult> failedTests = context.getFailedTests().getAllResults();
    	Set<ITestResult> skippedTests = context.getSkippedTests().getAllResults();
    	
    	for (ITestResult temp: failedTests) {
    		
    		ITestNGMethod method = temp.getMethod();
    		
    		if(context.getFailedTests().getResults(method).size() > 1) {
    			
    			failedTests.remove(temp);
    			ExtentService.getInstance().removeTest(ExtentTestManager.getTest(temp));
    			
    		} else {
    			
    			if(context.getPassedTests().getResults(method).size() > 0) {
    				
    				failedTests.remove(temp);
    				ExtentService.getInstance().removeTest(ExtentTestManager.getTest(temp));
    			} 	
    			
    			if(context.getSkippedTests().getResults(method).size() > 0) {
    				
    				skippedTests.remove(temp);
    				ExtentService.getInstance().removeTest(ExtentTestManager.getTest(temp));
    			}

    		}    		

    	}
 
        ExtentService.getInstance().flush();
    }

    public synchronized void onTestStart(ITestResult result) {
        ExtentTestManager.createMethod(result, true);
    }

    public synchronized void onTestSuccess(ITestResult result) {
        ExtentTestManager.log(result);
    }

    public synchronized void onTestFailure(ITestResult result) {
        ExtentTestManager.log(result);
    }

    public synchronized void onTestSkipped(ITestResult result) {
        ExtentTestManager.log(result);
    }

    public synchronized void onTestFailedButWithinSuccessPercentage(ITestResult result) {
    }
    

}
